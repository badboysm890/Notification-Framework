@import "../../../node_modules/bootstrap/scss/mixins/_breakpoints.scss";
@import "../../../node_modules/bootstrap/scss/mixins/_gradients.scss";
@import "../../../node_modules/bootstrap/scss/mixins/box-shadow.scss";

/* -------------------------------------------------------------------------- */

// Breakpoint viewport sizes and media queries.
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@include media-breakpoint-up($name: 'minimum width', $breakpoints: $grid-breakpoints);
// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@include media-breakpoint-down($name: 'maximum width', $breakpoints: $grid-breakpoints);
// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@include media-breakpoint-between($lower: 'min', $upper: 'max', $breakpoints: $grid-breakpoints);
// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
@include media-breakpoint-only($name: 'smallest width', $breakpoints: $grid-breakpoints);

// Example usage
/*
.some-class {
    @include media-breakpoint-up(sm) {
        // Larger than sm: 480px
        display: inline;
    }
    @include media-breakpoint-down(md) {
        // Smaller than md: 768px
        display: block;
    }
}
*/
/* -------------------------------------------------------------------------- */
@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {
    @if $enable-rounded {
        border-radius: $radius;
    }

    @else if $fallback-border-radius !=false {
        border-radius: $fallback-border-radius;
    }
}

// Used for notification-box and account box. Can be used for similar cases.
@mixin popover-box-down(
        $popoverBoxArrowSize: 10px, 
        $popoverBoxArrowRight: 30px, 
        $popoverBgColor: $white, 
        $popoverBorderColor: #ccc,
        $popoverTop: 62px,
        $popoverRight: 10px,
        $popoverWidth: 25rem,
        $popoverMaxwidth: 90%
    ) {
    position: absolute;
    top: $popoverTop;
    right: $popoverRight;
    width: $popoverWidth;
    max-width: $popoverMaxwidth;

    &:after, &:before {
        border: solid transparent;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
    }
    
    &:after {
        top: -($popoverBoxArrowSize + ($popoverBoxArrowSize - 1)-2);
        right: $popoverBoxArrowRight + 1;
        border-color: transparent;
        border-bottom-color: $popoverBgColor;
        border-width: $popoverBoxArrowSize;
        margin-left: 0 - $popoverBoxArrowSize;
    }
    &:before {
        top: -($popoverBoxArrowSize + ($popoverBoxArrowSize - 1));
        right: $popoverBoxArrowRight;
        border-color: transparent;
        border-bottom-color: $popoverBorderColor;
        border-width: $popoverBoxArrowSize + 1;
        margin-left: -1 - $popoverBoxArrowSize;
    }
}